AWSTemplateFormatVersion: 2010-09-09
Description: Vistra Scheduler Function Setup
Parameters:
  S3LambdaCodeBucket:
    Type: String
    Description: Enter the Name of the S3 bucket containing the Lambda function code
    AllowedPattern: '^[-0-9a-zA-Z_]+$'
    Default: vistra-technology-services-foundation-repo
  S3LambdaCodeBucketPath:
    Type: String
    Description: Enter the path to the Lambda function code within the S3 bucket
    AllowedPattern: '^[-0-9a-zA-Z_]+$'
    Default: resource_scheduler
  PythonVersion:
    Type: String
    Description: Enter the Python version as 'pythonX.Y
    Default: python3.12
  LayerCloudUtilsArn:
    Type: String
    Description: Enter the cloud_utils arn
    Default: 'arn:aws:lambda:us-east-1:646635606788:layer:cloud_utils:58'
  ResourceSchedulerCodeZipFileName:
    Type: String
    Description: Enter the lambda code zip file name
    Default: resource_scheduler-v1.20.zip
Resources:
  EventTrigger:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: resource_scheduler_trigger
      Description: Scheduled event to trigger the resource scheduler lambda function
      ScheduleExpression: cron(*/15 * * * ? *)
      RoleArn: !GetAtt 
        - ResourceSchedulerRole
        - Arn
      Targets:
        - Id: resource_scheduler_lambda_function
          Arn: !GetAtt 
            - ResourceScheduler
            - Arn
  ResourceScheduler:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: resource_scheduler
      Description: A function to start and shutdown resources based on start and stop tags
      Environment:
        Variables:
          Vistra_Holidays: >-
            New Year's Day,Washington's Birthday,Memorial Day,Independence
            Day,Labor Day,Thanksgiving,Thanksgiving Day After,Christmas
            Day,Christmas Eve
      Runtime: !Ref PythonVersion
      Code:
        S3Bucket: !Ref S3LambdaCodeBucket
        S3Key: !Join 
          - /
          - - !Ref S3LambdaCodeBucketPath
            - !Ref ResourceSchedulerCodeZipFileName
      Handler: resource_scheduler.main
      Timeout: '300'
      Role: !GetAtt 
        - ResourceSchedulerRole
        - Arn
      Layers:
        - !Ref LayerCloudUtilsArn
      Tags:
        - Key: Name
          Value: resource_scheduler_function
        - Key: application_name
          Value: vistra_resource_scheduler
        - Key: contact
          Value: jay.shillington@vistracorp.com
        - Key: contact2
          Value: cloud@vistracorp.com
  ResourceSchedulerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: Resource-Scheduler-Role
      PermissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/security/Basic.boundary'
      Policies:
        - PolicyName: Resource_Scheduler_Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: EC2Scheduler
                Effect: Allow
                Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:StartInstances'
                  - 'ec2:DescribeTags'
                  - 'ec2:StopInstances'
                  - 'autoscaling:DescribeAutoScalingGroups'
                Resource: '*'
              - Sid: RDSScheduler
                Effect: Allow
                Action:
                  - 'rds:ListTagsForResource'
                  - 'rds:DescribeDBInstances'
                  - 'rds:StopDBInstance'
                  - 'rds:StopDBCluster'
                  - 'rds:StartDBInstance'
                  - 'rds:StartDBCluster'
                Resource: '*'
              - Sid: AutoScaling
                Effect: Allow
                Action: 'autoscaling:DescribeAutoScalingGroups'
                Resource: '*'
              - Sid: CloudWatchLogging
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - events.amazonaws.com
            Action: 'sts:AssumeRole'
  LambdaTriggerPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref ResourceScheduler
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt 
        - EventTrigger
        - Arn
    DependsOn:
      - EventTrigger
  ResourceSchedulerLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join 
        - /
        - - /aws/lambda
          - !Ref ResourceScheduler
      RetentionInDays: 30
  ErrorLogFilter:
    Type: 'AWS::Logs::MetricFilter'
    Properties:
      LogGroupName: !Ref ResourceSchedulerLogGroup
      FilterPattern: ERROR
      MetricTransformations:
        - MetricName: vistra_resource_scheduler_errors
          MetricNamespace: VistraMetrics
          MetricValue: '1'
  MetricAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: vistra_resource_scheduler_errors_alarms
      AlarmDescription: >-
        Alarm to monitor alarms in the execution of the Vistra Resource
        Scheduler Lambda function
      Namespace: VistraMetrics
      MetricName: vistra_resource_scheduler_errors
      Threshold: '0'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: '1'
      Statistic: Minimum
      Period: '60'
      AlarmActions:
        - !Sub >-
          arn:aws:sns:us-east-1:${AWS::AccountId}:lambda_error_notification_topic
